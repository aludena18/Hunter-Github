<?xml version="1.0" encoding="utf-8"?>
<Project xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <FileVersion>
    <Major>1</Major>
    <Minor>0</Minor>
    <Patch>0</Patch>
  </FileVersion>
  <SDKVersion>
    <Major>1</Major>
    <Minor>3</Minor>
    <Patch>1</Patch>
  </SDKVersion>
  <Name>idp_agente_avl_basico</Name>
  <Services>
    <Service>
      <Name>idp_agente_avl_antiFatiga</Name>
      <SIN>142</SIN>
      <Properties>
        <Property xsi:type="BooleanProperty">
          <Name>debugState</Name>
          <PIN>1</PIN>
        </Property>
        <Property xsi:type="UnsignedIntProperty">
          <Name>timeSensorFatigueSyncUp</Name>
          <PIN>2</PIN>
          <Value>8</Value>
          <Maximum>15</Maximum>
          <Minimum>1</Minimum>
        </Property>
        <Property xsi:type="UnsignedIntProperty">
          <Name>timeSatIntervalOn</Name>
          <PIN>6</PIN>
          <Value>900</Value>
        </Property>
        <Property xsi:type="UnsignedIntProperty">
          <Name>timeSatIntervalOff</Name>
          <PIN>7</PIN>
          <Value>1800</Value>
        </Property>
        <Property xsi:type="UnsignedIntProperty">
          <Name>idlingTimer</Name>
          <PIN>8</PIN>
          <Value>180</Value>
        </Property>
        <Property xsi:type="UnsignedIntProperty">
          <Name>timeResetTerminal</Name>
          <Description>tiempo de espera para resetear el terminal luego de una desconexi√≥n con el server</Description>
          <PIN>9</PIN>
          <Value>5400</Value>
        </Property>
      </Properties>
      <ForwardMessages>
        <Message>
          <Name>getReport</Name>
          <MIN>1</MIN>
        </Message>
        <Message>
          <Name>setIgnitionONIntervalCell</Name>
          <Description>Intervalo de reportes en ignicion ON por GPRS. Medida en segundos.</Description>
          <MIN>2</MIN>
          <Fields>
            <Field xsi:type="UnsignedIntField">
              <Name>value</Name>
              <Description>Medida en segundos.</Description>
              <Size>20</Size>
              <Default>120</Default>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>setIgnitionONIntervalSat</Name>
          <Description>Intervalo de reportes en ignicion ON por SATELITE. Medida en segundos.</Description>
          <MIN>3</MIN>
          <Fields>
            <Field xsi:type="UnsignedIntField">
              <Name>value</Name>
              <Description>Medida en segundos.</Description>
              <Size>20</Size>
              <Default>900</Default>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>setIgnitionOFFIntervalCell</Name>
          <Description>Intervalo de reportes en ignicion OFF por GPRS. Medida en segundos.</Description>
          <MIN>4</MIN>
          <Fields>
            <Field xsi:type="UnsignedIntField">
              <Name>value</Name>
              <Description>Medida en segundos.</Description>
              <Size>20</Size>
              <Default>1800</Default>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>setIgnitionOFFIntervalSat</Name>
          <Description>Intervalo de reportes en ignicion OFF por SATELITE. Medida en segundos.</Description>
          <MIN>5</MIN>
          <Fields>
            <Field xsi:type="UnsignedIntField">
              <Name>value</Name>
              <Description>Medida en segundos.</Description>
              <Size>20</Size>
              <Default>3600</Default>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>enableHproReport</Name>
          <Description>habilita el tipo de reporte para Hunter Pro</Description>
          <MIN>6</MIN>
          <Fields>
            <Field xsi:type="BooleanField">
              <Name>value</Name>
              <Description>true or false</Description>
            </Field>
          </Fields>
        </Message>
      </ForwardMessages>
      <ReturnMessages>
        <Message>
          <Name>RequestReport</Name>
          <Description>Generated every @{Properties.MovingIntervalCell} and while AVL Moving state is true.
This event is typically set as Cell-only (see Utility agent).
This message would be deferred by any other AVL event that generates a from-mobile message.</Description>
          <MIN>2</MIN>
          <Fields>
            <Field xsi:type="SignedIntField">
              <Name>Latitude</Name>
              <Description>GPS latitude in milli-minute resolution</Description>
              <Size>24</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Longitude</Name>
              <Description>GPS longitude in milli-minute resolution</Description>
              <Size>25</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Speed</Name>
              <Description>GPS speed (or @{Properties.ExternalSpeedSource} if enabled) in km/h</Description>
              <Size>8</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Heading</Name>
              <Description>GNSS heading in degrees or 361 if vehicle is stationary.</Description>
              <Size>9</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>EventTime</Name>
              <Description>Event time in seconds since the epoch</Description>
              <Size>31</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>GpsFixAge</Name>
              <Description>GPS fix age in seconds relative to the Event Time</Description>
              <Optional>true</Optional>
              <Size>10</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Odometer</Name>
              <Description>GPS-based odometer in km. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>19</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>DigitalPorts</Name>
              <Description>See @{Properties.DigPorts}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>18</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>AvlStates</Name>
              <Description>See @{Properties.AvlStates}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>24</Size>
            </Field>
            <Field xsi:type="DataField">
              <Name>DriverId</Name>
              <Description>See @{Properties.DriverId}. Populated if a driver has logged in and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Fixed>true</Fixed>
              <Size>8</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor1</Name>
              <Description>Value of property referenced in @{Properties.Sensor1Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor2</Name>
              <Description>Value of property referenced in @{Properties.Sensor2Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor3</Name>
              <Description>Value of property referenced in @{Properties.Sensor3Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor4</Name>
              <Description>Value of property referenced in @{Properties.Sensor4Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>SatReport</Name>
          <Description>Generated every @{Properties.MovingIntervalCell} and while AVL Moving state is true.
This event is typically set as Cell-only (see Utility agent).
This message would be deferred by any other AVL event that generates a from-mobile message.</Description>
          <MIN>3</MIN>
          <Fields>
            <Field xsi:type="SignedIntField">
              <Name>Latitude</Name>
              <Description>GPS latitude in milli-minute resolution</Description>
              <Size>24</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Longitude</Name>
              <Description>GPS longitude in milli-minute resolution</Description>
              <Size>25</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Speed</Name>
              <Description>GPS speed (or @{Properties.ExternalSpeedSource} if enabled) in km/h</Description>
              <Size>8</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Heading</Name>
              <Description>GNSS heading in degrees or 361 if vehicle is stationary.</Description>
              <Size>9</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>EventTime</Name>
              <Description>Event time in seconds since the epoch</Description>
              <Size>31</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>GpsFixAge</Name>
              <Description>GPS fix age in seconds relative to the Event Time</Description>
              <Optional>true</Optional>
              <Size>10</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Odometer</Name>
              <Description>GPS-based odometer in km. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>19</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>DigitalPorts</Name>
              <Description>See @{Properties.DigPorts}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>18</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>AvlStates</Name>
              <Description>See @{Properties.AvlStates}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>24</Size>
            </Field>
            <Field xsi:type="DataField">
              <Name>DriverId</Name>
              <Description>See @{Properties.DriverId}. Populated if a driver has logged in and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Fixed>true</Fixed>
              <Size>8</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor1</Name>
              <Description>Value of property referenced in @{Properties.Sensor1Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor2</Name>
              <Description>Value of property referenced in @{Properties.Sensor2Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor3</Name>
              <Description>Value of property referenced in @{Properties.Sensor3Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor4</Name>
              <Description>Value of property referenced in @{Properties.Sensor4Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>CellReport</Name>
          <Description>Generated every @{Properties.MovingIntervalCell} and while AVL Moving state is true.
This event is typically set as Cell-only (see Utility agent).
This message would be deferred by any other AVL event that generates a from-mobile message.</Description>
          <MIN>4</MIN>
          <Fields>
            <Field xsi:type="SignedIntField">
              <Name>Latitude</Name>
              <Description>GPS latitude in milli-minute resolution</Description>
              <Size>24</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Longitude</Name>
              <Description>GPS longitude in milli-minute resolution</Description>
              <Size>25</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Speed</Name>
              <Description>GPS speed (or @{Properties.ExternalSpeedSource} if enabled) in km/h</Description>
              <Size>8</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Heading</Name>
              <Description>GNSS heading in degrees or 361 if vehicle is stationary.</Description>
              <Size>9</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>EventTime</Name>
              <Description>Event time in seconds since the epoch</Description>
              <Size>31</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>GpsFixAge</Name>
              <Description>GPS fix age in seconds relative to the Event Time</Description>
              <Optional>true</Optional>
              <Size>10</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Odometer</Name>
              <Description>GPS-based odometer in km. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>19</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>DigitalPorts</Name>
              <Description>See @{Properties.DigPorts}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>18</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>AvlStates</Name>
              <Description>See @{Properties.AvlStates}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>24</Size>
            </Field>
            <Field xsi:type="DataField">
              <Name>DriverId</Name>
              <Description>See @{Properties.DriverId}. Populated if a driver has logged in and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Fixed>true</Fixed>
              <Size>8</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor1</Name>
              <Description>Value of property referenced in @{Properties.Sensor1Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor2</Name>
              <Description>Value of property referenced in @{Properties.Sensor2Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor3</Name>
              <Description>Value of property referenced in @{Properties.Sensor3Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor4</Name>
              <Description>Value of property referenced in @{Properties.Sensor4Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>IdlingReport</Name>
          <Description>Generated every @{Properties.MovingIntervalCell} and while AVL Moving state is true.
This event is typically set as Cell-only (see Utility agent).
This message would be deferred by any other AVL event that generates a from-mobile message.</Description>
          <MIN>5</MIN>
          <Fields>
            <Field xsi:type="SignedIntField">
              <Name>Latitude</Name>
              <Description>GPS latitude in milli-minute resolution</Description>
              <Size>24</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Longitude</Name>
              <Description>GPS longitude in milli-minute resolution</Description>
              <Size>25</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Speed</Name>
              <Description>GPS speed (or @{Properties.ExternalSpeedSource} if enabled) in km/h</Description>
              <Size>8</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Heading</Name>
              <Description>GNSS heading in degrees or 361 if vehicle is stationary.</Description>
              <Size>9</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>EventTime</Name>
              <Description>Event time in seconds since the epoch</Description>
              <Size>31</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>GpsFixAge</Name>
              <Description>GPS fix age in seconds relative to the Event Time</Description>
              <Optional>true</Optional>
              <Size>10</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Odometer</Name>
              <Description>GPS-based odometer in km. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>19</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>DigitalPorts</Name>
              <Description>See @{Properties.DigPorts}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>18</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>AvlStates</Name>
              <Description>See @{Properties.AvlStates}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>24</Size>
            </Field>
            <Field xsi:type="DataField">
              <Name>DriverId</Name>
              <Description>See @{Properties.DriverId}. Populated if a driver has logged in and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Fixed>true</Fixed>
              <Size>8</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor1</Name>
              <Description>Value of property referenced in @{Properties.Sensor1Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor2</Name>
              <Description>Value of property referenced in @{Properties.Sensor2Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor3</Name>
              <Description>Value of property referenced in @{Properties.Sensor3Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor4</Name>
              <Description>Value of property referenced in @{Properties.Sensor4Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>FatigueAlarm</Name>
          <Description>Fatigue is detected</Description>
          <MIN>6</MIN>
          <Fields>
            <Field xsi:type="SignedIntField">
              <Name>Latitude</Name>
              <Description>GPS latitude in milli-minute resolution</Description>
              <Size>24</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Longitude</Name>
              <Description>GPS longitude in milli-minute resolution</Description>
              <Size>25</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Speed</Name>
              <Description>GPS speed (or @{Properties.ExternalSpeedSource} if enabled) in km/h</Description>
              <Size>8</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Heading</Name>
              <Description>GNSS heading in degrees or 361 if vehicle is stationary.</Description>
              <Size>9</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>EventTime</Name>
              <Description>Event time in seconds since the epoch</Description>
              <Size>31</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>GpsFixAge</Name>
              <Description>GPS fix age in seconds relative to the Event Time</Description>
              <Optional>true</Optional>
              <Size>10</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Odometer</Name>
              <Description>GPS-based odometer in km. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>19</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>DigitalPorts</Name>
              <Description>See @{Properties.DigPorts}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>18</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>AvlStates</Name>
              <Description>See @{Properties.AvlStates}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>24</Size>
            </Field>
            <Field xsi:type="DataField">
              <Name>DriverId</Name>
              <Description>See @{Properties.DriverId}. Populated if a driver has logged in and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Fixed>true</Fixed>
              <Size>8</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor1</Name>
              <Description>Value of property referenced in @{Properties.Sensor1Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor2</Name>
              <Description>Value of property referenced in @{Properties.Sensor2Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor3</Name>
              <Description>Value of property referenced in @{Properties.Sensor3Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor4</Name>
              <Description>Value of property referenced in @{Properties.Sensor4Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>DistracionAlarm</Name>
          <Description>Distraction is detected</Description>
          <MIN>7</MIN>
          <Fields>
            <Field xsi:type="SignedIntField">
              <Name>Latitude</Name>
              <Description>GPS latitude in milli-minute resolution</Description>
              <Size>24</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Longitude</Name>
              <Description>GPS longitude in milli-minute resolution</Description>
              <Size>25</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Speed</Name>
              <Description>GPS speed (or @{Properties.ExternalSpeedSource} if enabled) in km/h</Description>
              <Size>8</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Heading</Name>
              <Description>GNSS heading in degrees or 361 if vehicle is stationary.</Description>
              <Size>9</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>EventTime</Name>
              <Description>Event time in seconds since the epoch</Description>
              <Size>31</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>GpsFixAge</Name>
              <Description>GPS fix age in seconds relative to the Event Time</Description>
              <Optional>true</Optional>
              <Size>10</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Odometer</Name>
              <Description>GPS-based odometer in km. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>19</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>DigitalPorts</Name>
              <Description>See @{Properties.DigPorts}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>18</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>AvlStates</Name>
              <Description>See @{Properties.AvlStates}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>24</Size>
            </Field>
            <Field xsi:type="DataField">
              <Name>DriverId</Name>
              <Description>See @{Properties.DriverId}. Populated if a driver has logged in and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Fixed>true</Fixed>
              <Size>8</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor1</Name>
              <Description>Value of property referenced in @{Properties.Sensor1Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor2</Name>
              <Description>Value of property referenced in @{Properties.Sensor2Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor3</Name>
              <Description>Value of property referenced in @{Properties.Sensor3Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor4</Name>
              <Description>Value of property referenced in @{Properties.Sensor4Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
          </Fields>
        </Message>
        <Message>
          <Name>NoPortraitAlarm</Name>
          <Description>No portrait is detected</Description>
          <MIN>8</MIN>
          <Fields>
            <Field xsi:type="SignedIntField">
              <Name>Latitude</Name>
              <Description>GPS latitude in milli-minute resolution</Description>
              <Size>24</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Longitude</Name>
              <Description>GPS longitude in milli-minute resolution</Description>
              <Size>25</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Speed</Name>
              <Description>GPS speed (or @{Properties.ExternalSpeedSource} if enabled) in km/h</Description>
              <Size>8</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Heading</Name>
              <Description>GNSS heading in degrees or 361 if vehicle is stationary.</Description>
              <Size>9</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>EventTime</Name>
              <Description>Event time in seconds since the epoch</Description>
              <Size>31</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>GpsFixAge</Name>
              <Description>GPS fix age in seconds relative to the Event Time</Description>
              <Optional>true</Optional>
              <Size>10</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>Odometer</Name>
              <Description>GPS-based odometer in km. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>19</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>DigitalPorts</Name>
              <Description>See @{Properties.DigPorts}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>18</Size>
            </Field>
            <Field xsi:type="UnsignedIntField">
              <Name>AvlStates</Name>
              <Description>See @{Properties.AvlStates}. Populated if corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>24</Size>
            </Field>
            <Field xsi:type="DataField">
              <Name>DriverId</Name>
              <Description>See @{Properties.DriverId}. Populated if a driver has logged in and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Fixed>true</Fixed>
              <Size>8</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor1</Name>
              <Description>Value of property referenced in @{Properties.Sensor1Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor2</Name>
              <Description>Value of property referenced in @{Properties.Sensor2Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor3</Name>
              <Description>Value of property referenced in @{Properties.Sensor3Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
            <Field xsi:type="SignedIntField">
              <Name>Sensor4</Name>
              <Description>Value of property referenced in @{Properties.Sensor4Source}. Populated if property is defined, value is numeric, and corresponding bit is set in @{Properties.OptionalFieldsInMsgs}.</Description>
              <Optional>true</Optional>
              <Size>16</Size>
            </Field>
          </Fields>
        </Message>
      </ReturnMessages>
      <SourceFiles>
        <SourceFile>
          <Name>main.lua</Name>
          <Source>--
-- Service: script_alerta_sonora
-- Created: 2018-10-08
--
-- Ultima modificaci√≥n: 09-11-2020
-- Realizada por: Abel Lude√±a
-- Motivo:  mejorar el comportamiento cuando pierde se√±al GPRS y tx por SAT
--          cambiar la configuracion del utility agent de acuerdo a la plataforma donde reporte
--          geosys o hunter pro. En este √∫ltimo sobretodo la confi no guarda en flash 
--          msjs cuando pierde cobertura GPRS, para ser enviados cuando recupera cobertura.

module(..., package.seeall)

--
-- Version information (required)
--
_VERSION = "1.0.0"

--
-- Run service (required)
--

REQUEST_REPORT_MIN = 2
SAT_REPORT_MIN = 3
CELL_REPORT_MIN = 4
IDLING_REPORT_MIN = 5
FATIGUE_ALARM_MIN = 6
DISTRACTION_ALARM_MIN = 7
NO_PORTRAIT_ALARM_MIN = 8


messageHandle  = nil

local rs232auxConfig = { 
                         maxRxSize = 4096, 
                         maxTxSize = 4096 
                        }

local RS232auxHandle = nil

local DEBUG_TIME = 10

local avlStateQ, msgQ, serverConnQ, tmrDebugQ, tmrQ1, tmrQ4, tmrQ5, tmrQ6, auxSerQ

local stationaryIntvCell_initialValue
local stationaryIntvSat_initialValue

local myUtilityConfigTable_onCell
local myUtilityConfigTable_onSat


function traceIntervalValues()
  tracef("    %s","MovingIntervalCell = "..svc.AVL.properties.MovingIntervalCell)
  tracef("    %s","MovingIntervalSat = "..svc.AVL.properties.MovingIntervalSat)
  tracef("    %s","StationaryIntervalCell = "..svc.AVL.properties.StationaryIntervalCell)
  tracef("    %s","StationaryIntervalSat = "..svc.AVL.properties.StationaryIntervalSat)
  trace("*********************************************")
end

function insertDebug(level, dbgStr)  
    tracef( "%s : %s", _NAME, dbgStr)
    svc.log.addDebug(_SIN, level, dbgStr)

end

-- -----------------------------------------------------
-- Connect to RS232 aux handle 
-- -----------------------------------------------------
local function connectRS232aux()
    local handle, err = svc.serial.connect('rs232aux')
    if handle then
        insertDebug( svc.log.INFO, 'Serial AUX Handle has been assigned')
        return handle
    else
        insertDebug( svc.log.INFO, 'Serial AUX Handle has not been assigned: '.. err)
        return nil
    end
 end

-- -----------------------------------------------------
-- Disconnect to RS232 aux handle 
-- -----------------------------------------------------
function disconnectRS232aux()
  if RS232auxHandle ~= nil then
     RS232auxHandle:flush( '*b' )
     --handle:disconnect()
     if svc.serial.disconnect(RS232auxHandle) then
          RS232auxHandle = nil
     end
  end
  return ( RS232auxHandle == nil )  
end

----------------------------------
-- Shows RS232 frame in trace
---------------------------------
function showFrame(frame, fieldName)
  local hexFrame = ""                
  for i=1, string.len(frame) do
       hexFrame = hexFrame .. " ".. string.format("%02x",string.byte(string.sub(frame,i,i)))
       if i&gt;= 100 then
           tracef("%s %s%s",_NAME, fieldName, hexFrame)
           hexFrame = ""           
       end
  end                
  tracef("%s %s%s",_NAME, fieldName, hexFrame)
end


-- -----------------------------------------------------
-- Send Custom Message
-- -----------------------------------------------------
local function sendMessage(min)
  --trace("-----------------"..svc.AVL.properties.DigPorts)
  local spd = (svc.position.properties.speed * 1.852) / 10
  local odo = svc.AVL.properties.Odometer / 1000
  
  local spd_decimal = spd - math.floor(spd)
  local odo_decimal = odo - math.floor(odo)
  
  if spd_decimal&gt;=0.5 then spd = spd +1 end
  if odo_decimal&gt;=0.5 then odo = odo + 1 end
  
  local speed_kmh = math.floor(spd)
  local odometer_km = math.floor(odo)
  
  local heading_deg = 361
  if svc.AVL.properties.AvlStates &gt; 7 then
    bits=toBits(svc.AVL.properties.AvlStates)
    bits_concat = table.concat(bits)
    bit_moving = string.sub(bits_concat, 4, 4)
    insertDebug(svc.log.INFO,"Estado de Movimiento = "..bit_moving)
    if bit_moving == "1" then
      heading_deg = svc.position.properties.heading/10
    else
      heading_deg = 361
    end
  else
    heading_deg = 361
  end
  
  local msgFields = {
                          Latitude      = svc.position.properties.latitude,
                          Longitude     = svc.position.properties.longitude,
                          Speed         = speed_kmh,
                          Heading       = heading_deg,
                          EventTime     = os.time(),
                          --GpsFixAge     = svc.position.properties.fixTime,
                          Odometer      = odometer_km,
                      } 
                            
  local options
  if min==3 then
    options =  {send=true, log=true, lifetime=20, transports={ {1, 10} }, persistent=true}
  else
    options =  {send=true, log=true, lifetime=20, transports={ {2, 2}, {1, 10} }, persistent=true}
  end
  
  local refNo, err = messageHandle:send(min, msgFields, options)
  
  if (not err) then
    insertDebug(svc.log.INFO, string.format("%s: message sent (RefNo = %d). (MIN = %s)", _NAME, refNo, min) )
    --local res, err = user.dataExtraction.insertRegister(_SIN, min, refNo, miString, noBits, SAVE_TO_FILE)        
  else    
    insertDebug(svc.log.ERROR, string.format("%s: (MIN = %s) message not sent: %s", _NAME, min, err))
    -- Message was not placed in Tx queue but it goes to the extract table and file
    --local res, err = user.dataExtraction.insertRegister(_SIN, min, nil , miString, noBits, SAVE_TO_FILE)   
  end
 
 
end

function toBits(num)
    -- returns a table of bits, least significant first.
    if num&gt;0 then
    
      local t={} -- will contain the bits
      while num&gt;0 do
          rest=math.fmod(num,2)
          t[#t+1]=rest
          num=(num-rest)/2
      end
      return t
    
    else
      return 0
    end
    
end


function evaluaEstados(e,arg)
  trace("*********** AVL state: ", e, " has changed to: ", tostring(arg))

  if e=="IgnitionOn" then
    if arg==true then
      insertDebug(svc.log.INFO,"IGNICION ON")
      ProcessIgnitionON()
    else
      insertDebug(svc.log.INFO,"IGNICION OFF")
      ProcessIgnitionOFF()
    end
  
  elseif e=="Moving" then
    if arg==true then
      insertDebug(svc.log.INFO,"MOVIMIENTO")
      --ProcessMoving()
    else
      insertDebug(svc.log.INFO,"DETENIDO")
      --ProcessStationary()
    end
  
  elseif e=="Speeding" then
    speeding = arg
    if arg==true then
        trace("******************* ALERTA SONORA ACTIVADA *******************")
        svc.eio.writePort(3, 0)
    elseif arg==false then
        trace("******************* ALERTA SONORA DESACTIVADA *******************")
        svc.eio.writePort(3, 1)
    end
  
  end
    
end



function eventosAVL(min,fields)

  if min == 4 then -- ignition ON
    trace("***************  IGNITION ON EVENT  ***************")          

  elseif min == 5 then -- ignition OFF
    trace("***************  IGNITION OFF EVENT ***************")
      
  elseif min == 21 then
    sendMessage(IDLING_REPORT_MIN)
    insertDebug(svc.log.INFO,"mensaje enviado: idling hunter-transagui")
  end

end


function ProcessIgnitionON()
      svc.AVL.properties.MovingIntervalCell     = svc.AVL.properties.MovingIntervalCell
      svc.AVL.properties.MovingIntervalSat      = svc.AVL.properties.MovingIntervalSat
      svc.AVL.properties.StationaryIntervalCell = svc.AVL.properties.MovingIntervalCell
      svc.AVL.properties.StationaryIntervalSat  = svc.AVL.properties.MovingIntervalSat
      traceIntervalValues()
      
      --ACTIVA TIMER DEBUG STATE
      tmrDebugQ:event():arm(DEBUG_TIME * 10)
      
      --ACTIVA TIMER DE SINCRONIZACION DEL SENSOR DE FATIGA
      tmrQ1:event():arm(properties.timeSensorFatigueSyncUp*10)
      
      --ACTIVA TIMER DE REPORTE SATELITAL DEL USER SERVICE (SIN142)
      tmrQ4:event():disarm()
      tmrQ4:clear()
      tmrQ4:event():arm( properties.timeSatIntervalOn * 10)
      trace("-------&gt; SIN 142 - TIMER INTERVAL SAT (Igniciton on)  = ".. properties.timeSatIntervalOn)
      
      --DESATIVA TIMER RALENTI OFF
      tmrQ5:event():disarm()
      tmrQ5:clear()
      
end


function ProcessIgnitionOFF()
      svc.AVL.properties.StationaryIntervalCell = stationaryIntvCell_initialValue
      svc.AVL.properties.StationaryIntervalSat  = stationaryIntvSat_initialValue
      traceIntervalValues()
      
      -- DESACTIVA TIMER DEBUG STATE
      tmrDebugQ:event():disarm()
      tmrDebugQ:clear()
      
      --DESACTIVA TIMER DE SINCRONIZACION DEL SENSOR DE FATIGA
      tmrQ1:event():disarm()
      tmrQ1:clear()
      
      --DESACTIVA TIMER DE REPORTE SATELITAL DEL USER SERVICE (SIN142)
      tmrQ4:event():disarm()
      tmrQ4:clear()
      tmrQ4:event():arm( properties.timeSatIntervalOff * 10)
      trace("-------&gt; SIN 142 - TIMER INTERVAL SAT (Igniciton off)  = ".. properties.timeSatIntervalOff)
      
      --ACTIVA TIMER RALENTI OFF
      tmrQ5:event():disarm()
      tmrQ5:clear()
      tmrQ5:event():arm(properties.idlingTimer * 10)
      insertDebug(svc.log.INFO,"SIN 142 - IDLING TIME (Ignition off) = "..properties.idlingTimer)
end



function mensajeRecibido(arg)

  trace("**************** MENSAJE RECIBIDO ****************")
  trace(arg)

  if (arg.min) == 1 then
    trace("Send Custom Report")
    trace("-----------------------------------------------")
  elseif (arg.min) == 2 then
    svc.AVL.properties.MovingIntervalCell = arg.fields.value
    if svc.eio.properties.port1Value==1 then
      svc.AVL.properties.StationaryIntervalCell = svc.AVL.properties.MovingIntervalCell
    end
    traceIntervalValues()
  elseif (arg.min) == 3 then
    svc.AVL.properties.MovingIntervalSat = arg.fields.value
    if svc.eio.properties.port1Value==1 then
      svc.AVL.properties.StationaryIntervalSat = svc.AVL.properties.MovingIntervalSat
    end
    traceIntervalValues()
  elseif (arg.min) == 4 then
    stationaryIntvCell_initialValue = arg.fields.value
    if svc.eio.properties.port1Value==0 then
      svc.AVL.properties.StationaryIntervalCell = stationaryIntvCell_initialValue
    end
    traceIntervalValues()
  elseif (arg.min) == 5 then
    stationaryIntvSat_initialValue = arg.fields.value
    if svc.eio.properties.port1Value==0 then
      svc.AVL.properties.StationaryIntervalSat  = stationaryIntvSat_initialValue
    end
    traceIntervalValues()
  elseif (arg.min) == 6 then
    properties.hunterProMsg = arg.fields.value
  end


end


------------------------------------
-- procesa timer Debug State
------------------------------------
function processTimerDebugState()
  tmrDebugQ:event():arm(DEBUG_TIME * 10)
  if properties.debugState then
    trace("--------------- DEBUG STATE ---------------")
    trace("RSSI = ".. svc.cell.properties.rssi)
    --trace("Server Connected = ".. svc.ip.properties.serverConnected)
    --trace("APN Connected = ".. svc.cell.properties.APNConnected)
    trace("MCC = ".. svc.cell.properties.mcc)
    trace("MNC = ".. svc.cell.properties.mnc)
    trace("Latitud = ".. svc.position.properties.latitude)
    trace("Longitud = ".. svc.position.properties.longitude)
    trace("Time = ".. os.time())
    trace(" ")
  end

end


------------------------------------
-- procesa el timer q1
------------------------------------
function processTimerQ1()

if svc.eio.properties.port1Value==1 then
  
    tmrQ1:event():arm(properties.timeSensorFatigueSyncUp*10)
    
    local velNudos = svc.position.properties.speed
    local velKmh = velNudos*0.1852
    
    if velKmh&gt;255 then
      velKmh = 0
    end
  
    local vel
    if velNudos&gt;9 then
      vel= string.format("%i",velKmh)
    else
      vel="0"
    end
  
    local velData = tonumber(vel)
    local checksum = 170 + 117 + 85 + velData
    
    local sumSS
    if checksum&gt;255 then
      sum = checksum - 256
    elseif checksum&lt;256 then
      sum = checksum
    end
    
    local data = { 0xAA, 0x75, 0x55, velData, 0x00, 0x00, 0x00, 0x00, 0x00, sum }
    RS232auxHandle:writeframe(data)
    
    tracef("%s %s --&gt; %s : %s",_NAME,"Timer sync antifatiga","Velocidad",vel.." kmh")
    
  end
  
end


------------------------------------
-- procesa el timer q4
------------------------------------
function processTimerQ4()
  trace("")  
  trace("********* CADUCO TIMER SATELITAL HUNTER - TRANSAGUI *********")
  trace("") 
  
  --if svc.ip.properties.serverConnected then
  --  sendMessage(CELL_REPORT_MIN)
  --  trace("")
  -- trace("********** MENSAJE ENVIADO CELL_REPORT_MIN **********")
  --  trace("")
  --end
  
  if not svc.ip.properties.serverConnected or svc.cell.properties.rssi&lt;3 then
    sendMessage(SAT_REPORT_MIN)
    trace("")
    trace("********** MENSAJE ENVIADO SAT_REPORT_MIN **********")
    trace("")
  elseif svc.ip.properties.serverConnected then
    sendMessage(CELL_REPORT_MIN)
    trace("")
    trace("********** MENSAJE ENVIADO CELL_REPORT_MIN **********")
    trace("")
  end
  
  if svc.eio.properties.port1Value==1 then
    tmrQ4:event():arm(properties.timeSatIntervalOn * 10)
    insertDebug(svc.log.INFO,"Intervalo de tiempo satelital hunter-transagui = ".. properties.timeSatIntervalOn)
  elseif svc.eio.properties.port1Value==0 then
    tmrQ4:event():arm(properties.timeSatIntervalOff * 10)
    insertDebug(svc.log.INFO,"Intervalo de tiempo satelital hunter-transagui = ".. properties.timeSatIntervalOff)
  end
end


------------------------------------
-- procesa el timer q5
------------------------------------
function processTimerQ5()
 sendMessage(IDLING_REPORT_MIN)
end

------------------------------------
-- procesa el timer q6
------------------------------------
function processTimerQ6()

  if not svc.ip.properties.serverConnected then
    insertDebug(svc.log.INFO,"****** Reset Terminal IDP ******")
    svc.system.reset(true)
  end  
 
end

-- ---------------------------------------------------------------------
-- CHECK FATIGUE SENSOR ALARM
-- ---------------------------------------------------------------------
function fatigueSensorAlarm(data)
  
  if string.sub(data,1,2) == string.char(0xAA, 0x75) then
    local len = string.len(data)
    
    if len==10 then        
      if string.sub(data,8,9) == string.char(0x51, 0x01) then
        alarmDebug("FATIGUE REMIND" )
      elseif string.sub(data,8,9) == string.char(0x51, 0x02) then
        sendMessage(FATIGUE_ALARM_MIN)
        alarmDebug("FATIGUE ALARM" )
      elseif string.sub(data,8,9) == string.char(0x51, 0x03) then
        sendMessage(FATIGUE_ALARM_MIN)
        alarmDebug("FATIGUE WARNING" )
      elseif string.sub(data,8,9) == string.char(0x52, 0x00) then
        sendMessage(DISTRACTION_ALARM_MIN)
        alarmDebug("DISTRACTION ALARM" )
      elseif string.sub(data,8,9) == string.char(0x53, 0x00) then
        sendMessage(NO_PORTRAIT_ALARM_MIN)
        alarmDebug("NO PORTRAIT ALARM" )
      end
    end
    
    if len==20 and (string.sub(data,11,12) == string.char(0xAA, 0x75)) then    
      if string.sub(data,18,19) == string.char(0x51, 0x01) then
        alarmDebug("FATIGUE REMIND" )
      elseif string.sub(data,18,19) == string.char(0x51, 0x02) then
        sendMessage(FATIGUE_ALARM_MIN)
        alarmDebug("FATIGUE ALARM" )
      elseif string.sub(data,18,19) == string.char(0x51, 0x03) then
        sendMessage(FATIGUE_ALARM_MIN)
        alarmDebug("FATIGUE WARNING" )
      elseif string.sub(data,18,19) == string.char(0x52, 0x00) then
        sendMessage(DISTRACTION_ALARM_MIN)
        alarmDebug("DISTRACTION ALARM" )
      elseif string.sub(data,18,19) == string.char(0x53, 0x00) then
        sendMessage(NO_PORTRAIT_ALARM_MIN)
        alarmDebug("NO PORTRAIT ALARM" )
      end    
    end

  end
  
  RS232auxHandle:flush('*r')
end


------------------------------------
-- Change message definition
------------------------------------
function changeMsgDef(args)

  if args then
    trace("****************** SERVIDOR CONECTADO!! ******************")
    local res, err = svc.Utility.SetMsgConfig(myUtilityConfigTable_onCell,126)
    tracef("%s %s : %s",_NAME, "utility config on Cell",tostring(res))
    tmrQ6:event():disarm()
    tmrQ6:clear()
    insertDebug(svc.log.INFO,"se detuvo el timer reset IDP")
  else
    trace("****************** SERVIDOR DESCONECTADO!! ******************")
    local res, err = svc.Utility.SetMsgConfig(myUtilityConfigTable_onSat,126)
    tracef("%s %s : %s",_NAME, "utility config on Sat",tostring(res))
    tmrQ6:event():arm(properties.timeResetTerminal * 10)
    insertDebug(svc.log.INFO,"inicio del timer reset IDP")
  end
    
end


------------------------------------
-- Change properties SIN128
------------------------------------
function onConfigChange(propList)
  
  for i=1, #propList do
 
     if ( propList[i].name == "hunterProMsg") then
          
          
     end
 
 end

end



function entry()
  trace(_NAME, ": service started")
  --sched.delay(-1)
  
  if svc.ip.properties.serverConnected then
    trace("****************** SERVIDOR CONECTADO!! ******************")
    local res, err = svc.Utility.SetMsgConfig(myUtilityConfigTable_onCell,126)
    tracef("%s %s : %s",_NAME, "utility config on Cell",tostring(res))
  else
    trace("****************** SERVIDOR DESCONECTADO!! ******************")
    local res, err = svc.Utility.SetMsgConfig(myUtilityConfigTable_onSat,126)
    tracef("%s %s : %s",_NAME, "utility config on Sat",tostring(res))
  end
  

  while true do
    
    local args = {sched.waitQ(-1, avlStateQ, msgQ, serverConnQ, tmrDebugQ, tmrQ1, tmrQ4, tmrQ5, tmrQ6, auxSerQ)}
    local q, event, arguments = table.remove(args,1), table.remove(args,1), table.remove(args,1)

    if q == avlStateQ then
      evaluaEstados(event, arguments)
    elseif q == msgQ then
      mensajeRecibido(arguments)
    elseif q == serverConnQ then
      changeMsgDef(arguments)
    elseif q == tmrDebugQ then
      processTimerDebugState()
    elseif q == tmrQ1 then
      processTimerQ1()
    elseif q == tmrQ4 then
      processTimerQ4() -- reporte periodico por satelite personalizado
    elseif q == tmrQ5 then
      processTimerQ5() -- rerpote de ralent√≠ personalizado
    elseif q == tmrQ6 then
      processTimerQ6() -- reset IDP
    elseif q == auxSerQ and tostring(args[1])~='' then
      showFrame(args[1], "Frame received (aux) -&gt;")
      fatigueSensorAlarm(args[1])
    end

  end

end

--
-- Initialize service (required)
--
function init()

  svc.AVL.MSG_RegisterEventNotify(eventosAVL)
  messageHandle = svc.message.register(_SIN)

  if (not messageHandle) then
    trace(svc.log.ERROR, string.format("%s:SIN %d already registered", _NAME, _SIN))
    return
  end
  
  disconnectRS232aux()
  RS232auxHandle = connectRS232aux()
  RS232auxHandle:setFrameConfig(rs232auxConfig)
  
  avlStateQ     = sched.createEventQ(4, svc.AVL, "IgnitionOn","Moving","Speeding")
  msgQ          = sched.createEventQ(10, messageHandle, 'RX_DECODED')
  serverConnQ   = sched.createEventQ(2, svc.ip, "SERVER_CONNECTED")
  auxSerQ       = sched.createEventQ( 50, RS232auxHandle:source() )
  
  tmrDebugQ = sched.createEventQ(1, "_TIMER", sys.timer.create() )
  tmrQ1 = sched.createEventQ(2, "_TIMER", sys.timer.create() )  
  tmrQ4 = sched.createEventQ(2, "_TIMER", sys.timer.create() )
  tmrQ5 = sched.createEventQ(2, "_TIMER", sys.timer.create() )
  tmrQ6 = sched.createEventQ(2, "_TIMER", sys.timer.create() )

  stationaryIntvCell_initialValue = svc.AVL.properties.StationaryIntervalCell
  stationaryIntvSat_initialValue = svc.AVL.properties.StationaryIntervalSat
  
  myUtilityConfigTable_onCell = {
      [1]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [2]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [3]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [4]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [5]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [6]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [7]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [8]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [9]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [10]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [11]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [12]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [13]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [14]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [15]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [16]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [17]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [18]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [19]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [20]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [21]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [22]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=10},
      [23]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [24]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [25]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [26]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [27]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [28]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [29]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [30]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [31]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [32]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [33]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [34]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [35]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [36]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [37]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [38]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [39]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [40]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [41]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [42]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [43]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [44]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [45]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [46]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [47]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [48]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [49]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=10},
      [50]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [51]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [52]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [53]={transport=svc.Utility.Transports.CellOnly, isLog=true, priority=3, lifetime=10},
      [54]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [55]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [56]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [57]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [58]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [59]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [60]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [61]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [62]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [63]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [64]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [65]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [66]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [67]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [68]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [69]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [70]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [71]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [72]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [73]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [74]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [75]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [76]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [77]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [78]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [79]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [80]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [81]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [82]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [83]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [84]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [85]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [86]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [87]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [88]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [89]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [90]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [91]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [92]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [93]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [94]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [95]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [96]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [97]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [98]={transport=nil, isLog=true, priority=3, lifetime=10080}
      }

  myUtilityConfigTable_onSat = {
      [1]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [2]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [3]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [4]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=20},
      [5]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=20},
      [6]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [7]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [8]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [9]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [10]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [11]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [12]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [13]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [14]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [15]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [16]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=20},
      [17]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [18]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [19]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [20]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [21]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [22]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=20},
      [23]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [24]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [25]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [26]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [27]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [28]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [29]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [30]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [31]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [32]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [33]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [34]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [35]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [36]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [37]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [38]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [39]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [40]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [41]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [42]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [43]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [44]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [45]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [46]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [47]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [48]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [49]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=20},
      [50]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [51]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [52]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [53]={transport=svc.Utility.Transports.SatOnly, isLog=true, priority=3, lifetime=20},
      [54]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [55]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [56]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [57]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [58]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [59]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [60]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [61]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [62]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [63]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [64]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [65]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [66]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [67]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [68]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [69]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [70]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [71]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [72]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [73]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [74]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [75]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [76]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [77]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [78]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [79]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [80]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [81]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [82]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [83]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [84]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [85]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [86]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [87]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [88]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [89]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [90]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [91]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [92]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [93]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [94]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [95]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [96]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [97]={transport=nil, isLog=true, priority=3, lifetime=10080},
      [98]={transport=nil, isLog=true, priority=3, lifetime=10080}
      }

end</Source>
        </SourceFile>
      </SourceFiles>
    </Service>
  </Services>
  <PropertyValues />
</Project>